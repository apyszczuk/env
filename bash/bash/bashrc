# ALIASES --------------------------------------------------------------------------------

# ls
alias ls='ls --color=auto'
alias ll='ls -lh'
alias l='ls -lah'

# cp
alias cp='cp -i'

# rm
alias rm='rm -i'

# cd
alias ..='cd ../'
alias ...='cd ../../'
alias ....='cd ../../../'
alias .....='cd ../../../../'
alias ......='cd ../../../../../'

# git
alias gst='git status'
alias glgg='git log --decorate --graph'
alias glgga='git log --decorate --graph --all'
alias gd='git diff'
alias gds='git diff --staged'


# AUTO COMPLETION ------------------------------------------------------------------------

if [[ $PS1 && -f /usr/share/bash-completion/bash_completion ]]; then
    . /usr/share/bash-completion/bash_completion
fi


# OPTIONS --------------------------------------------------------------------------------

bind 'set colored-completion-prefix on'
bind 'set colored-stats on'
bind 'set completion-ignore-case on'
bind 'set menu-complete-display-prefix on'
bind 'set show-all-if-ambiguous on'
bind 'set show-all-if-unmodified on'

bind 'TAB:menu-complete'
bind '"\e[Z":menu-complete-backward'

bind '"\C-w":backward-kill-word'
bind 'set bind-tty-special-chars off'


# PROMPT ---------------------------------------------------------------------------------

_color_white="01;37"
_color_yellow="01;33"
_color_blue="01;34"
_color_red="01;31"
_color_green="01;32"

function _print_in_color()
{
    color="$1"
    str="$2"

    # "\[" and "\]" are special characters to begin and end sequence of
    # non-printing characters. Without them, prompt gets messy.
    #
    # https://www.gnu.org/savannah-checkouts/gnu/bash/manual/bash.html#index-prompting
    printf "\[\033[%sm\]%s\[\033[0m\]" "$color" "$str"
}

function _prompt_git_status_parse()
{
    status="$1"
    greptext="$2"
    ret="$3"

    value=$(printf "$status" | grep "$greptext")
    
    if [ "$value" == "" ]; then
        printf ""
    else
        printf "$ret"
    fi
}

function _prompt_git_untracked()
{
    _prompt_git_status_parse "$1" "^Untracked files:" "%%"
}

function _prompt_git_modified()
{
    _prompt_git_status_parse "$1" "^Changes not staged for commit:" "*"
}

function _prompt_git_staged()
{
    _prompt_git_status_parse "$1" "^Changes to be committed:" "+"
}

function _prompt_git_branch_up_to_date()
{
    _prompt_git_status_parse "$1" "^Your branch is up to date with" "="
}

function _prompt_git_branch_ahead()
{
    _prompt_git_status_parse "$1" "^Your branch is ahead of" ">"
}

function _prompt_git_branch_behind()
{
    _prompt_git_status_parse "$1" "^Your branch is behind" "<"
}

function _prompt_git_branch_diverged()
{
    _prompt_git_status_parse "$1" "^Your branch and '.*' have diverged" "<>"
}

function _prompt_git_branch_name()
{
    stat="$1"
    branch_name=$(printf "$stat" | grep "^On branch" | awk '{ print $3}')
    if [ "$branch_name" == "" ]; then
        branch_name=$(printf "$stat" | grep "^HEAD detached at" | awk '{ print $4}')
    fi
    printf "$branch_name"
}

function _prompt_git()
{
    is_repo=$(git rev-parse --is-inside-work-tree 2> /dev/null)
    if [ "$is_repo" == "true" ]; then
        stat=$(git status)

        printf " "
        printf "("
        _print_in_color "$_color_green" "$(_prompt_git_branch_name "$stat")"
        _print_in_color "$_color_red" "$(_prompt_git_modified "$stat")"
        _print_in_color "$_color_green" "$(_prompt_git_staged "$stat")"
        _print_in_color "$_color_blue" "$(_prompt_git_untracked "$stat")"
        _print_in_color "$_color_green" "$(_prompt_git_branch_up_to_date "$stat")"
        _print_in_color "$_color_green" "$(_prompt_git_branch_ahead "$stat")"
        _print_in_color "$_color_green" "$(_prompt_git_branch_behind "$stat")"
        _print_in_color "$_color_red" "$(_prompt_git_branch_diverged "$stat")"
        printf ")"
    else
        printf ""
    fi
}

function _prompt()
{
    if [ "$?" == "0" ]; then
        prompt_sign_color="$_color_green"
    else
        prompt_sign_color="$_color_yellow"
    fi

    _print_in_color "$_color_white" "\u"
    printf "@"
    _print_in_color "$_color_yellow" "\h"
    printf ":"
    _print_in_color "$_color_blue" "\w"
    _prompt_git
    _print_in_color "$prompt_sign_color" " $ "
}

export PROMPT_COMMAND="export PS1=\$(_prompt)"
